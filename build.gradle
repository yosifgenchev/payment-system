buildscript {
	apply from: "$project.rootDir/settings/dependencies.gradle"

	repositories {
		mavenCentral()
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'checkstyle'
	id "org.openapi.generator" version "6.2.1"
	id "org.jetbrains.gradle.plugin.idea-ext" version "1.1.6"
}

group = 'com.paymentsystem'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation (
			project.ext.modules.org_openapitools,
			project.ext.modules.javax
	)

	runtimeOnly project.ext.modules.org_postgresql

	compileOnly project.ext.modules.org_lombok

	annotationProcessor (
			project.ext.modules.org_lombok,
			project.ext.modules.javax
	)

	testImplementation (
			project.ext.test_modules.org_springframework_starter_test,
			project.ext.test_modules.org_springframework_security_test
	)
}

tasks.named('test') {
	useJUnitPlatform()
}

idea.project.settings {
	taskTriggers {
		beforeBuild tasks.getByName("openApiGenerate")
		beforeRebuild tasks.getByName("openApiGenerate")
		afterSync tasks.getByName("openApiGenerate")
		beforeSync tasks.getByName("openApiGenerate")
	}
}

springBoot {
	mainClass = 'com.paymentsystem.app.Application'
}

openApiGenerate {
	generatorName = "spring"
	inputSpec = "${projectDir}/src/main/resources/api/api-spec.yaml"
	outputDir = "${buildDir}/generated/open-api"
	apiPackage = "com.paymentsystem.api"
	invokerPackage = "com.paymentsystem.handler"
	modelPackage = "com.paymentsystem.model"
	modelNameSuffix = "Json"
	configOptions = [
			delegatePattern: "true"
	]
}


compileJava {
	dependsOn  tasks.openApiGenerate
	source "${buildDir}/generated/open-api/src/main/java"
}

sourceSets {
	main {
		java {
			srcDir "${buildDir.absolutePath}/generated/open-api/src/main/java"
		}
	}
}